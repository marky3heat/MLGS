/*tinymce-knockout-binding v1.0.0|(c) 2013 Michael Papworth|raw.github.com/michaelpapworth/tinymce-knockout-binding/master/LICENSE*/(function (n) { ko.bindingHandlers.wysiwyg = { init: function (t, i, r, u, f) { var o = ko.utils.unwrapObservable(i()), s = r.has("wysiwygConfig") ? r.get("wysiwygConfig") : {}, e = { browser_spellcheck: n(t).prop("spellcheck"), plugins: ["link", "paste"], toolbar: "undo redo | bold italic | bullist numlist | link", menubar: !1, statusbar: !1, setup: function (n) { var t = function () { var t, u; if (!ko.isWriteableObservable(i())) throw "valueAccessor must be writeable and observable"; if (t = n.getContent(), o !== t) if (i()(t), r.has("wysiwygDirty")) { if (u = r.get("wysiwygDirty"), !ko.isWriteableObservable(u)) throw "wysiwygDirty must be writeable and observable"; u(!0) } else f.$root.isDirty = !0 }; n.on("change", t).on("keyup", t) } }; e = n.extend(e, s); n(t).text(o).tinymce(e); ko.utils.domNodeDisposal.addDisposeCallback(t, function () { tinyMCE.remove("#" + t.id) }) }, update: function (n, t, i, r, u) { return ko.bindingHandlers.value.update(n, t, i, r, u) } } })(jQuery);